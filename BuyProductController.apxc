public class BuyProductController {
  private Id productID;
    
    public Product__c product {get; set;} 
    public Contacts__c contact { 
        get { if (contact == null) 
                    contact = new Contacts__c ();
              return contact;
            }
        set;
    }    
    public Discount__c discountFromPage { 
        get { if (discountFromPage == null) 
                    discountFromPage = new Discount__c ();
              return discountFromPage;
            }
        set;
    }    
    private Contacts__c contactFromBase {get; set;}
    
    public BuyProductController() {
        productID = ApexPages.currentPage().getParameters().get('Id');
        product = [SELECT Id,
                        Name,
                        Amount__c,
                        Title__c,
                          Description__c,
                        Image__c,
                        Cost__c
                   FROM Product__c
                   WHERE Id = :productID
                   LIMIT 1];
        
        checkDiscount();
    }
    
    public PageReference buyProduct() {
        PageReference ref;
        
        getDiscountByCode();
        System.debug('getDiscountByCode=' + discountFromPage.Percentes_of__c);
        
        try {
            if (contact.E_Mail__c != contactFromBase.E_Mail__c && contact.E_Mail__c != null) {
                if (contact.Name == null) {
                    ApexPages.addMessage(new ApexPages.Message(ApexPages.Severity.ERROR,'Enter name!')); 
                } else {
                    insert contact; 
                }
            } else if (contact.Name != contactFromBase.Name) {
                contactFromBase.Name = contact.Name;
                update contactFromBase;
            }
        } catch(Exception e) { 
            ApexPages.addMessage(new ApexPages.Message(ApexPages.Severity.ERROR,'Enter e-mail'));   
            return null;     
        }
       
        if (product.Amount__c < 1) {
            ref = new PageReference('/apex/Shop' + '?errorMessage=' + 'Amount ' + product.Name + '  < 1' );
            ref.setRedirect(true);
            return ref;
        }
        product.Amount__c -= 1; 
        Product__c newProduct = new Product__c();
        newProduct = product.clone(false, true, false, false);
        newProduct.Amount__c = 1;
        RecordType productRecordType = [SELECT id,
                                             Name 
                                        FROM RecordType 
                                        WHERE SobjectType='Product__c' AND 
                                              Name='Sold' 
                                        LIMIT 1];
        ApexPages.addMessage(new ApexPages.Message(ApexPages.Severity.ERROR,productRecordType.Name + productRecordType.id)); 
        newProduct.RecordTypeId = productRecordType.Id;
        insert newProduct;
        ref = new PageReference('/apex/BuyOk' + '?ProductId=' + product.Id + '&DiscountId=' + discountFromPage.Id );
        ref.setRedirect(true);
        return ref;
    }
    
    public void contactCheck() {        

        contactFromBase = new Contacts__c();
        try {
        contactFromBase = [SELECT Id,
                                  E_Mail__c,
                                Name,
                                  Address__c,
                                  Phone__c
                           FROM Contacts__c
                           WHERE E_Mail__c = :contact.E_Mail__c AND
                               E_Mail__c != NULL
                           LIMIT 1];
        } catch(Exception e) {          
            contact.Name = '';
            contact.Address__c = '';
            contact.Phone__c = '';
            return;
        }    
        contact.Name = contactFromBase.Name;  
        contact.Address__c = contactFromBase.Address__c; 
        contact.Phone__c = contactFromBase.Phone__c;
    }
    
    private void getDiscountByCode() {
        if (discountFromPage == null) {
            return;
        }
        
        Discount__c discountFromBase = new Discount__c();
        try {
            discountFromBase = [SELECT Id,
                                     Name,
                                       Discount_Code__c,
                                       Percentes_of__c,
                                       Static_discount__c
                                FROM Discount__c
                                WHERE Discount_Code__c = :discountFromPage.Discount_Code__c
                                LIMIT 1];
            discountFromPage.id = discountFromBase.id;
            discountFromPage.Percentes_of__c = (discountFromBase.Percentes_of__c == null) ? 0 : discountFromBase.Percentes_of__c;
            discountFromPage.Static_discount__c = (discountFromBase.Static_discount__c == null) ? 0 : discountFromBase.Static_discount__c;
        } catch(Exception e) {  
          System.debug('Your promo code not active');
        }
        
    }
    
    private void checkDiscount() {
        Id userId = System.UserInfo.getUserId();
        Account account = new Account();
        User user = new User(); 
        user = [SELECT Id,
                       AccountId
                FROM User
                WHERE Id = :userId
                LIMIT 1];
        account = [SELECT Id
                   FROM Account
                   WHERE Id = :user.AccountId
                   LIMIT 1];
        
        Discount__c discount = new Discount__c();
        try {
          discount = [SELECT  Id,
                                Name,
                                Discount_Code__c,
                                Percentes_of__c,
                                Static_discount__c
                        FROM Discount__c
                        WHERE Account__c = :account.Id
                        LIMIT 1];    
             System.debug('You have autodiscount=' + discount.Percentes_of__c + '-' + discount.Static_discount__c);
             ApexPages.addMessage(new ApexPages.Message(ApexPages.Severity.ERROR,'You have autodiscount=' + discount.Percentes_of__c + '-' + discount.Static_discount__c)); 
        } catch(Exception e) {
            ApexPages.addMessage(new ApexPages.Message(ApexPages.Severity.ERROR,'You do not have autodiscount. Enter promocode'));
        }
        
    }
    
}